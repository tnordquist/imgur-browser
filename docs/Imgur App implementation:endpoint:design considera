Imgur App implementation/endpoint/design considerations

- Authentication: The API requires each client to use OAuth 2 authentication. This means you'll have to register your application, and generate an access_code if you'd like to log in as a user. For public read-only and anonymous resources, such as getting image info, looking up user comments, etc. all you need to do is send an authorization header with your client_id in your requests. This also works if you'd like to upload images anonymously (without the image being tied to an account), or if you'd like to create an anonymous album. This lets us know which application is accessing the API.
	- Most operations can be done anonymously:
		- the endpoint search just needs to include <Authorization Client-ID {{clientId}}>

	  - Do we still want an app that requires the user to log in?
			- I say we go anonymous for this app.

What endpoints to consider for actual use?

- Gallery Search: Search the gallery with a given query string.
	- https://api.imgur.com/3/gallery/search/{{sort}}/{{window}}/{{page}}?q=cats
		- This allows person to search anything public - if not looking as a user.
		- Optionals are: {sort},{window},{page}.

- Gallery Tag: Returns tag metadata, and posts tagged with the `tagName` provided.
	- https://api.imgur.com/3/gallery/t/{tagName} note: tagName = cute exists for example
		- This searches by tag found by looking in the gallery search above, or randomly tried tag name.
	- Note: This will probably not be used for the app.

- Image: Get information about an image
	- GET: https://api.imgur.com/3/image/{imageHash}  note: imageHash = 2a81nL9 exists for example
		- This searches for individual image. Image hash(id) was included in the results of gallery search.

- Image Upload: Upload a new image or video from your device to imgur api.
		- First create an anonymous album:
			- POST: https://api.imgur.com/3/album
				- Authorization: Client-ID {client_id}" in the request headers
				- Content-Type: multipart/form-data in the request headers
				- Add additional info. such as title and description in Body: form-data.
		- Image Upload
			- POST: https://api.imgur.com/3/image/upload/
				- Authorization: Client-ID {client_id}" in the request headers
				- Content-Type: multipart/form-data in the request headers
				- image upload required 	A binary file, base64 data, or a URL for an image in Body:form data, key: image, value: file title.png for example (up to 10MB)
				- album id in Body: form-data
				- Add name, title, and description in Body:form-data if you like.
		- Retrieve the Album
			- GET: https://api.imgur.com/3/album/{{albumHash}}
				- Request headers: Authorization Client-ID {{clientId}}
		- Album contains image[] containing info. regarding uploaded images.















		

